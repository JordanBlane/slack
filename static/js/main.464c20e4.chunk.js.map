{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["username","prompt","getData","curchannel","curtheme","App","state","Message","Username","Workspace","currentChannel","className","this","WorkspaceName","Topbar","Messages","Emoji","React","Component","Options","id","onClick","Lighttheme","darktheme","SideBar","toggleThemes","onMouseOver","topHover","onMouseOut","topHoverOut","resetJSON","Name","Id","themeDiv","document","getElementById","style","display","emojiFaces","emojiPeople","emojiClothes","emojiAnimals","emojiFood","emojiSports","emojiTravel","emojiObjects","emojiSymbols","emojiFlags","emojiArr","split","changeemoji","e","innerHTML","target","divs","i","length","temp","createElement","appendChild","addEventListener","insertEmoji","updateemoji","Emojitoggle","div","emoji","value","sidebar","backgroundColor","color","messagebox","topbar","getElementsByTagName","channelButtons","getElementsByClassName","ChatBox","placeholder","onKeyDown","enterToChat","Channel","data-id","chatChange","channelHover","channelHoverOut","setData","general","topic","messages","messageUser","resources","code","challenges","dev","random","users","activeButton","x","loadChats","dataset","buttons","button","border","element1","element2","keyCode","input","MessageObject","Date","getHours","getMinutes","scrollTop","scrollHeight","clientHeight","send","a","Promise","resolve","reject","$","get","data","console","log","ajax","url","type","JSON","stringify","contentType","dataType","success","textStatus","jqXHR","window","setInterval","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.464c20e4.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport $ from 'jquery'\n\n//gets username, makes sure its not blank\nvar username = prompt('username');\n\n//set theme\n\n//gets data from json file and sets it to MessageObject var\ngetData();\n\n//used later to get current channel\nvar curchannel = '';\nvar curchanneltopic = '';\n\n//current theme;\nvar curtheme = 1;\n\n//main app class\nclass App extends React.Component{\n  //sets state\n  state ={\n    Message:'',\n    Username:username,\n    Workspace:'Important',\n    currentChannel:'',\n  }\n  render(){\n    return(\n      <div className='mainWrapper'>\n        <SideBar Username={this.state.Username} WorkspaceName={this.state.Workspace}/>\n        <Topbar />\n        <ChatBox />\n        <Messages />\n        <Emoji />\n      </div>\n    )\n  }\n}\nfunction Options(){\n  return(\n    <div id=\"themes\" className = 'options'>\n      <h2>Options</h2>\n      <h4>Themes</h4>\n      <button id='light' onClick={Lighttheme}>Light Theme</button>\n      <button id='dark' onClick={darktheme}>Dark Theme</button>\n    </div>\n  )\n}\n\n//purple side bar\nfunction SideBar(SideBar){\n  return(\n    <div id=\"sidebar\" className=\"sidebar\">\n      <div onClick={toggleThemes} onMouseOver={topHover} onMouseOut={topHoverOut} id=\"sideTop\">\n        <div id=\"sideProfile\">\n          <h1>{SideBar.WorkspaceName}<span id=\"topspan\">▼</span></h1>\n          <div id=\"online\"></div>\n          <p id=\"sideName\">{SideBar.Username}</p>\n          <i onClick={resetJSON} className=\"fa fa-bell\"></i>\n        </div>\n        <div id=\"sideSearch\">\n        </div>\n      </div>\n      <div id=\"sideBottom\">\n        <Options />\n        <h2 id=\"channels\">Channels</h2>\n        <Channel Name='# general' Id='1'/>\n        <Channel Name='# resources' Id='2'/>\n        <Channel Name='# code' Id='3'/>\n        <Channel Name='# challenges' Id='4'/>\n        <Channel Name='# dev' Id='5'/>\n        <Channel Name='# random' Id='6'/>\n      </div>\n    </div>\n  )\n}\n\n//function shows and hides themes\nfunction toggleThemes(){\n  let themeDiv = document.getElementById('themes');\n  if(themeDiv.style.display == \"inline-block\"){\n    themeDiv.style.display = \"none\"\n  }else{\n    themeDiv.style.display = \"inline-block\"\n  }\n}\n\nlet emojiFaces = \"😀 😁 😂 🤣 😃 😄 😅 😆 😉 😊 😋 😎 😍 😘 🥰 😗 😙 😚 🙂 🤗 🤩 🤔 🤨 😐 😑 😶 🙄 😏 😣 😥 😮 🤐 😯 😪 😫 😴 😌 😛 😜 😝 🤤 😒 😓 😔 😕 🙃 🤑 😲 ☹️ 🙁 😖 😞 😟 😤 😢 😭 😦 😧 😨 😩 🤯 😬 😰 😱 🥵 🥶 😳 🤪 😵 😡 😠 🤬 😷 🤒 🤕 🤢 🤮 🤧 😇 🤠 🤡 🥳 🥴 🥺 🤥 🤫 🤭 🧐 🤓 😈 👿 👹 👺 💀 👻 👽 🤖 💩 😺 😸 😹 😻 😼 😽 🙀 😿 😾\"\nlet emojiPeople = \"👶 👧 🧒 👦 👩 🧑 👨 👵 🧓 👴 👲 👳‍♀️ 👳‍♂️ 🧕 🧔 👱‍♂️ 👱‍♀️ 👨‍🦰 👩‍🦰 👨‍🦱 👩‍🦱 👨‍🦲 👩‍🦲 👨‍🦳 👩‍🦳 🦸‍♀️ 🦸‍♂️ 🦹‍♀️ 🦹‍♂️ 👮‍♀️ 👮‍♂️ 👷‍♀️ 👷‍♂️ 💂‍♀️ 💂‍♂️ 🕵️‍♀️ 🕵️‍♂️ 👩‍⚕️ 👨‍⚕️ 👩‍🌾 👨‍🌾 👩‍🍳 👨‍🍳 👩‍🎓 👨‍🎓 👩‍🎤 👨‍🎤 👩‍🏫 👨‍🏫 👩‍🏭 👨‍🏭 👩‍💻 👨‍💻 👩‍💼 👨‍💼 👩‍🔧 👨‍🔧 👩‍🔬 👨‍🔬 👩‍🎨 👨‍🎨 👩‍🚒 👨‍🚒 👩‍✈️ 👨‍✈️ 👩‍🚀 👨‍🚀 👩‍⚖️ 👨‍⚖️ 👰 🤵 👸 🤴 🤶 🎅 🧙‍♀️ 🧙‍♂️ 🧝‍♀️ 🧝‍♂️ 🧛‍♀️ 🧛‍♂️ 🧟‍♀️ 🧟‍♂️ 🧞‍♀️ 🧞‍♂️ 🧜‍♀️ 🧜‍♂️ 🧚‍♀️ 🧚‍♂️ 👼 🤰 🤱 🙇‍♀️ 🙇‍♂️ 💁‍♀️ 💁‍♂️ 🙅‍♀️ 🙅‍♂️ 🙆‍♀️ 🙆‍♂️ 🙋‍♀️ 🙋‍♂️ 🤦‍♀️ 🤦‍♂️ 🤷‍♀️ 🤷‍♂️ 🙎‍♀️ 🙎‍♂️ 🙍‍♀️ 🙍‍♂️ 💇‍♀️ 💇‍♂️ 💆‍♀️ 💆‍♂️ 🧖‍♀️ 🧖‍♂️ 💅 🤳 💃 🕺 👯‍♀️ 👯‍♂️ 🕴 🚶‍♀️ 🚶‍♂️ 🏃‍♀️ 🏃‍♂️ 👫 👭 👬 💑 👩‍❤️‍👩 👨‍❤️‍👨 💏 👩‍❤️‍💋‍👩 👨‍❤️‍💋‍👨 👪 👨‍👩‍👧 👨‍👩‍👧‍👦 👨‍👩‍👦‍👦 👨‍👩‍👧‍👧 👩‍👩‍👦 👩‍👩‍👧 👩‍👩‍👧‍👦 👩‍👩‍👦‍👦 👩‍👩‍👧‍👧 👨‍👨‍👦 👨‍👨‍👧 👨‍👨‍👧‍👦 👨‍👨‍👦‍👦 👨‍👨‍👧‍👧 👩‍👦 👩‍👧 👩‍👧‍👦 👩‍👦‍👦 👩‍👧‍👧 👨‍👦 👨‍👧 👨‍👧‍👦 👨‍👦‍👦 👨‍👧‍👧 🤲 👐 🙌 👏 🤝 👍 👎 👊 ✊ 🤛 🤜 🤞 ✌️ 🤟 🤘 👌 👈 👉 👆 👇 ☝️ ✋ 🤚 🖐 🖖 👋 🤙 💪 🦵 🦶 🖕 ✍️ 🙏 💍 💄 💋 👄 👅 👂 👃 👣 👁 👀 🧠 🦴 🦷 🗣 👤 👥\"\nlet emojiClothes = \"🧥 👚 👕 👖 👔 👗 👙 👘 👠 👡 👢 👞 👟 🥾 🥿 🧦 🧤 🧣 🎩 🧢 👒 🎓 ⛑ 👑 👝 👛 👜 💼 🎒 👓 🕶 🥽 🥼 🌂 🧵 🧶\"\nlet emojiAnimals = \"🐶 🐱 🐭 🐹 🐰 🦊 🦝 🐻 🐼 🦘 🦡 🐨 🐯 🦁 🐮 🐷 🐽 🐸 🐵 🙈 🙉 🙊 🐒 🐔 🐧 🐦 🐤 🐣 🐥 🦆 🦢 🦅 🦉 🦚 🦜 🦇 🐺 🐗 🐴 🦄 🐝 🐛 🦋 🐌 🐚 🐞 🐜 🦗 🕷 🕸 🦂 🦟 🦠 🐢 🐍 🦎 🦖 🦕 🐙 🦑 🦐 🦀 🐡 🐠 🐟 🐬 🐳 🐋 🦈 🐊 🐅 🐆 🦓 🦍 🐘 🦏 🦛 🐪 🐫 🦙 🦒 🐃 🐂 🐄 🐎 🐖 🐏 🐑 🐐 🦌 🐕 🐩 🐈 🐓 🦃 🕊 🐇 🐁 🐀 🐿 🦔 🐾 🐉 🐲 🌵 🎄 🌲 🌳 🌴 🌱 🌿 ☘️ 🍀 🎍 🎋 🍃 🍂 🍁 🍄 🌾 💐 🌷 🌹 🥀 🌺 🌸 🌼 🌻 🌞 🌝 🌛 🌜 🌚 🌕 🌖 🌗 🌘 🌑 🌒 🌓 🌔 🌙 🌎 🌍 🌏 💫 ⭐️ 🌟 ✨ ⚡️ ☄️ 💥 🔥 🌪 🌈 ☀️ 🌤 ⛅️ 🌥 ☁️ 🌦 🌧 ⛈ 🌩 🌨 ❄️ ☃️ ⛄️ 🌬 💨 💧 💦 ☔️ ☂️ 🌊 🌫\"\nlet emojiFood = \"🍏 🍎 🍐 🍊 🍋 🍌 🍉 🍇 🍓 🍈 🍒 🍑 🍍 🥭 🥥 🥝 🍅 🍆 🥑 🥦 🥒 🥬 🌶 🌽 🥕 🥔 🍠 🥐 🍞 🥖 🥨 🥯 🧀 🥚 🍳 🥞 🥓 🥩 🍗 🍖 🌭 🍔 🍟 🍕 🥪 🥙 🌮 🌯 🥗 🥘 🥫 🍝 🍜 🍲 🍛 🍣 🍱 🥟 🍤 🍙 🍚 🍘 🍥 🥮 🥠 🍢 🍡 🍧 🍨 🍦 🥧 🍰 🎂 🍮 🍭 🍬 🍫 🍿 🧂 🍩 🍪 🌰 🥜 🍯 🥛 🍼 ☕️ 🍵 🥤 🍶 🍺 🍻 🥂 🍷 🥃 🍸 🍹 🍾 🥄 🍴 🍽 🥣 🥡 🥢\"\nlet emojiSports = \"⚽️ 🏀 🏈 ⚾️ 🥎 🏐 🏉 🎾 🥏 🎱 🏓 🏸 🥅 🏒 🏑 🥍 🏏 ⛳️ 🏹 🎣 🥊 🥋 🎽 ⛸ 🥌 🛷 🛹 🎿 ⛷ 🏂 🏋️‍♀️ 🏋🏻‍♀️ 🏋🏼‍♀️ 🏋🏽‍♀️ 🏋🏾‍♀️ 🏋🏿‍♀️ 🏋️‍♂️ 🏋🏻‍♂️ 🏋🏼‍♂️ 🏋🏽‍♂️ 🏋🏾‍♂️ 🏋🏿‍♂️ 🤼‍♀️ 🤼‍♂️ 🤸‍♀️ 🤸🏻‍♀️ 🤸🏼‍♀️ 🤸🏽‍♀️ 🤸🏾‍♀️ 🤸🏿‍♀️ 🤸‍♂️ 🤸🏻‍♂️ 🤸🏼‍♂️ 🤸🏽‍♂️ 🤸🏾‍♂️ 🤸🏿‍♂️ ⛹️‍♀️ ⛹🏻‍♀️ ⛹🏼‍♀️ ⛹🏽‍♀️ ⛹🏾‍♀️ ⛹🏿‍♀️ ⛹️‍♂️ ⛹🏻‍♂️ ⛹🏼‍♂️ ⛹🏽‍♂️ ⛹🏾‍♂️ ⛹🏿‍♂️ 🤺 🤾‍♀️ 🤾🏻‍♀️ 🤾🏼‍♀️ 🤾🏾‍♀️ 🤾🏾‍♀️ 🤾🏿‍♀️ 🤾‍♂️ 🤾🏻‍♂️ 🤾🏼‍♂️ 🤾🏽‍♂️ 🤾🏾‍♂️ 🤾🏿‍♂️ 🏌️‍♀️ 🏌🏻‍♀️ 🏌🏼‍♀️ 🏌🏽‍♀️ 🏌🏾‍♀️ 🏌🏿‍♀️ 🏌️‍♂️ 🏌🏻‍♂️ 🏌🏼‍♂️ 🏌🏽‍♂️ 🏌🏾‍♂️ 🏌🏿‍♂️ 🏇 🏇🏻 🏇🏼 🏇🏽 🏇🏾 🏇🏿 🧘‍♀️ 🧘🏻‍♀️ 🧘🏼‍♀️ 🧘🏽‍♀️ 🧘🏾‍♀️ 🧘🏿‍♀️ 🧘‍♂️ 🧘🏻‍♂️ 🧘🏼‍♂️ 🧘🏽‍♂️ 🧘🏾‍♂️ 🧘🏿‍♂️ 🏄‍♀️ 🏄🏻‍♀️ 🏄🏼‍♀️ 🏄🏽‍♀️ 🏄🏾‍♀️ 🏄🏿‍♀️ 🏄‍♂️ 🏄🏻‍♂️ 🏄🏼‍♂️ 🏄🏽‍♂️ 🏄🏾‍♂️ 🏄🏿‍♂️ 🏊‍♀️ 🏊🏻‍♀️ 🏊🏼‍♀️ 🏊🏽‍♀️ 🏊🏾‍♀️ 🏊🏿‍♀️ 🏊‍♂️ 🏊🏻‍♂️ 🏊🏼‍♂️ 🏊🏽‍♂️ 🏊🏾‍♂️ 🏊🏿‍♂️ 🤽‍♀️ 🤽🏻‍♀️ 🤽🏼‍♀️ 🤽🏽‍♀️ 🤽🏾‍♀️ 🤽🏿‍♀️ 🤽‍♂️ 🤽🏻‍♂️ 🤽🏼‍♂️ 🤽🏽‍♂️ 🤽🏾‍♂️ 🤽🏿‍♂️ 🚣‍♀️ 🚣🏻‍♀️ 🚣🏼‍♀️ 🚣🏽‍♀️ 🚣🏾‍♀️ 🚣🏿‍♀️ 🚣‍♂️ 🚣🏻‍♂️ 🚣🏼‍♂️ 🚣🏽‍♂️ 🚣🏾‍♂️ 🚣🏿‍♂️ 🧗‍♀️ 🧗🏻‍♀️ 🧗🏼‍♀️ 🧗🏽‍♀️ 🧗🏾‍♀️ 🧗🏿‍♀️ 🧗‍♂️ 🧗🏻‍♂️ 🧗🏼‍♂️ 🧗🏽‍♂️ 🧗🏾‍♂️ 🧗🏿‍♂️ 🚵‍♀️ 🚵🏻‍♀️ 🚵🏼‍♀️ 🚵🏽‍♀️ 🚵🏾‍♀️ 🚵🏿‍♀️ 🚵‍♂️ 🚵🏻‍♂️ 🚵🏼‍♂️ 🚵🏽‍♂️ 🚵🏾‍♂️ 🚵🏿‍♂️ 🚴‍♀️ 🚴🏻‍♀️ 🚴🏼‍♀️ 🚴🏽‍♀️ 🚴🏾‍♀️ 🚴🏿‍♀️ 🚴‍♂️ 🚴🏻‍♂️ 🚴🏼‍♂️ 🚴🏽‍♂️ 🚴🏾‍♂️ 🚴🏿‍♂️ 🏆 🥇 🥈 🥉 🏅 🎖 🏵 🎗 🎫 🎟 🎪 🤹‍♀️ 🤹🏻‍♀️ 🤹🏼‍♀️ 🤹🏽‍♀️ 🤹🏾‍♀️ 🤹🏿‍♀️ 🤹‍♂️ 🤹🏻‍♂️ 🤹🏼‍♂️ 🤹🏽‍♂️ 🤹🏾‍♂️ 🤹🏿‍♂️ 🎭 🎨 🎬 🎤 🎧 🎼 🎹 🥁 🎷 🎺 🎸 🎻 🎲 🧩 ♟ 🎯 🎳 🎮 🎰\"\nlet emojiTravel = \"🚗 🚕 🚙 🚌 🚎 🏎 🚓 🚑 🚒 🚐 🚚 🚛 🚜 🛴 🚲 🛵 🏍 🚨 🚔 🚍 🚘 🚖 🚡 🚠 🚟 🚃 🚋 🚞 🚝 🚄 🚅 🚈 🚂 🚆 🚇 🚊 🚉 ✈️ 🛫 🛬 🛩 💺 🛰 🚀 🛸 🚁 🛶 ⛵️ 🚤 🛥 🛳 ⛴ 🚢 ⚓️ ⛽️ 🚧 🚦 🚥 🚏 🗺 🗿 🗽 🗼 🏰 🏯 🏟 🎡 🎢 🎠 ⛲️ ⛱ 🏖 🏝 🏜 🌋 ⛰ 🏔 🗻 🏕 ⛺️ 🏠 🏡 🏘 🏚 🏗 🏭 🏢 🏬 🏣 🏤 🏥 🏦 🏨 🏪 🏫 🏩 💒 🏛 ⛪️ 🕌 🕍 🕋 ⛩ 🛤 🛣 🗾 🎑 🏞 🌅 🌄 🌠 🎇 🎆 🌇 🌆 🏙 🌃 🌌 🌉 🌁\"\nlet emojiObjects = \"⌚️ 📱 📲 💻 ⌨️ 🖥 🖨 🖱 🖲 🕹 🗜 💽 💾 💿 📀 📼 📷 📸 📹 🎥 📽 🎞 📞 ☎️ 📟 📠 📺 📻 🎙 🎚 🎛 ⏱ ⏲ ⏰ 🕰 ⌛️ ⏳ 📡 🔋 🔌 💡 🔦 🕯 🗑 🛢 💸 💵 💴 💶 💷 💰 💳 🧾 💎 ⚖️ 🔧 🔨 ⚒ 🛠 ⛏ 🔩 ⚙️ ⛓ 🔫 💣 🔪 🗡 ⚔️ 🛡 🚬 ⚰️ ⚱️ 🏺 🧭 🧱 🔮 🧿 🧸 📿 💈 ⚗️ 🔭 🧰 🧲 🧪 🧫 🧬 🧯 🔬 🕳 💊 💉 🌡 🚽 🚰 🚿 🛁 🛀 🛀🏻 🛀🏼 🛀🏽 🛀🏾 🛀🏿 🧴 🧵 🧶 🧷 🧹 🧺 🧻 🧼 🧽 🛎 🔑 🗝 🚪 🛋 🛏 🛌 🖼 🛍 🧳 🛒 🎁 🎈 🎏 🎀 🎊 🎉 🧨 🎎 🏮 🎐 🧧 ✉️ 📩 📨 📧 💌 📥 📤 📦 🏷 📪 📫 📬 📭 📮 📯 📜 📃 📄 📑 📊 📈 📉 🗒 🗓 📆 📅 📇 🗃 🗳 🗄 📋 📁 📂 🗂 🗞 📰 📓 📔 📒 📕 📗 📘 📙 📚 📖 🔖 🔗 📎 🖇 📐 📏 📌 📍 ✂️ 🖊 🖋 ✒️ 🖌 🖍 📝 ✏️ 🔍 🔎 🔏 🔐 🔒 🔓\"\nlet emojiSymbols = \"❤️ 🧡 💛 💚 💙 💜 🖤 💔 ❣️ 💕 💞 💓 💗 💖 💘 💝 💟 ☮️ ✝️ ☪️ 🕉 ☸️ ✡️ 🔯 🕎 ☯️ ☦️ 🛐 ⛎ ♈️ ♉️ ♊️ ♋️ ♌️ ♍️ ♎️ ♏️ ♐️ ♑️ ♒️ ♓️ 🆔 ⚛️ 🉑 ☢️ ☣️ 📴 📳 🈶 🈚️ 🈸 🈺 🈷️ ✴️ 🆚 💮 🉐 ㊙️ ㊗️ 🈴 🈵 🈹 🈲 🅰️ 🅱️ 🆎 🆑 🅾️ 🆘 ❌ ⭕️ 🛑 ⛔️ 📛 🚫 💯 💢 ♨️ 🚷 🚯 🚳 🚱 🔞 📵 🚭 ❗️ ❕ ❓ ❔ ‼️ ⁉️ 🔅 🔆 〽️ ⚠️ 🚸 🔱 ⚜️ 🔰 ♻️ ✅ 🈯️ 💹 ❇️ ✳️ ❎ 🌐 💠 Ⓜ️ 🌀 💤 🏧 🚾 ♿️ 🅿️ 🈳 🈂️ 🛂 🛃 🛄 🛅 🚹 🚺 🚼 🚻 🚮 🎦 📶 🈁 🔣 ℹ️ 🔤 🔡 🔠 🆖 🆗 🆙 🆒 🆕 🆓 0️⃣ 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟 🔢 #️⃣ *️⃣ ⏏️ ▶️ ⏸ ⏯ ⏹ ⏺ ⏭ ⏮ ⏩ ⏪ ⏫ ⏬ ◀️ 🔼 🔽 ➡️ ⬅️ ⬆️ ⬇️ ↗️ ↘️ ↙️ ↖️ ↕️ ↔️ ↪️ ↩️ ⤴️ ⤵️ 🔀 🔁 🔂 🔄 🔃 🎵 🎶 ➕ ➖ ➗ ✖️ ♾ 💲 💱 ™️ ©️ ®️ 〰️ ➰ ➿ 🔚 🔙 🔛 🔝 🔜 ✔️ ☑️ 🔘 ⚪️ ⚫️ 🔴 🔵 🔺 🔻 🔸 🔹 🔶 🔷 🔳 🔲 ▪️ ▫️ ◾️ ◽️ ◼️ ◻️ ⬛️ ⬜️ 🔈 🔇 🔉 🔊 🔔 🔕 📣 📢 👁‍🗨 💬 💭 🗯 ♠️ ♣️ ♥️ ♦️ 🃏 🎴 🀄️ 🕐 🕑 🕒 🕓 🕔 🕕 🕖 🕗 🕘 🕙 🕚 🕛 🕜 🕝 🕞 🕟 🕠 🕡 🕢 🕣 🕤 🕥 🕦 🕧\"\nlet emojiFlags = \"🏳️ 🏴 🏁 🚩 🏳️‍🌈 🏴‍☠️ 🇦🇫 🇦🇽 🇦🇱 🇩🇿 🇦🇸 🇦🇩 🇦🇴 🇦🇮 🇦🇶 🇦🇬 🇦🇷 🇦🇲 🇦🇼 🇦🇺 🇦🇹 🇦🇿 🇧🇸 🇧🇭 🇧🇩 🇧🇧 🇧🇾 🇧🇪 🇧🇿 🇧🇯 🇧🇲 🇧🇹 🇧🇴 🇧🇦 🇧🇼 🇧🇷 🇮🇴 🇻🇬 🇧🇳 🇧🇬 🇧🇫 🇧🇮 🇰🇭 🇨🇲 🇨🇦 🇮🇨 🇨🇻 🇧🇶 🇰🇾 🇨🇫 🇹🇩 🇨🇱 🇨🇳 🇨🇽 🇨🇨 🇨🇴 🇰🇲 🇨🇬 🇨🇩 🇨🇰 🇨🇷 🇨🇮 🇭🇷 🇨🇺 🇨🇼 🇨🇾 🇨🇿 🇩🇰 🇩🇯 🇩🇲 🇩🇴 🇪🇨 🇪🇬 🇸🇻 🇬🇶 🇪🇷 🇪🇪 🇪🇹 🇪🇺 🇫🇰 🇫🇴 🇫🇯 🇫🇮 🇫🇷 🇬🇫 🇵🇫 🇹🇫 🇬🇦 🇬🇲 🇬🇪 🇩🇪 🇬🇭 🇬🇮 🇬🇷 🇬🇱 🇬🇩 🇬🇵 🇬🇺 🇬🇹 🇬🇬 🇬🇳 🇬🇼 🇬🇾 🇭🇹 🇭🇳 🇭🇰 🇭🇺 🇮🇸 🇮🇳 🇮🇩 🇮🇷 🇮🇶 🇮🇪 🇮🇲 🇮🇱 🇮🇹 🇯🇲 🇯🇵 🎌 🇯🇪 🇯🇴 🇰🇿 🇰🇪 🇰🇮 🇽🇰 🇰🇼 🇰🇬 🇱🇦 🇱🇻 🇱🇧 🇱🇸 🇱🇷 🇱🇾 🇱🇮 🇱🇹 🇱🇺 🇲🇴 🇲🇰 🇲🇬 🇲🇼 🇲🇾 🇲🇻 🇲🇱 🇲🇹 🇲🇭 🇲🇶 🇲🇷 🇲🇺 🇾🇹 🇲🇽 🇫🇲 🇲🇩 🇲🇨 🇲🇳 🇲🇪 🇲🇸 🇲🇦 🇲🇿 🇲🇲 🇳🇦 🇳🇷 🇳🇵 🇳🇱 🇳🇨 🇳🇿 🇳🇮 🇳🇪 🇳🇬 🇳🇺 🇳🇫 🇰🇵 🇲🇵 🇳🇴 🇴🇲 🇵🇰 🇵🇼 🇵🇸 🇵🇦 🇵🇬 🇵🇾 🇵🇪 🇵🇭 🇵🇳 🇵🇱 🇵🇹 🇵🇷 🇶🇦 🇷🇪 🇷🇴 🇷🇺 🇷🇼 🇼🇸 🇸🇲 🇸🇦 🇸🇳 🇷🇸 🇸🇨 🇸🇱 🇸🇬 🇸🇽 🇸🇰 🇸🇮 🇬🇸 🇸🇧 🇸🇴 🇿🇦 🇰🇷 🇸🇸 🇪🇸 🇱🇰 🇧🇱 🇸🇭 🇰🇳 🇱🇨 🇵🇲 🇻🇨 🇸🇩 🇸🇷 🇸🇿 🇸🇪 🇨🇭 🇸🇾 🇹🇼 🇹🇯 🇹🇿 🇹🇭 🇹🇱 🇹🇬 🇹🇰 🇹🇴 🇹🇹 🇹🇳 🇹🇷 🇹🇲 🇹🇨 🇹🇻 🇻🇮 🇺🇬 🇺🇦 🇦🇪 🇬🇧 🏴󠁧󠁢󠁥󠁮󠁧󠁿 🏴󠁧󠁢󠁳󠁣󠁴󠁿 🏴󠁧󠁢󠁷󠁬󠁳󠁿 🇺🇳 🇺🇸 🇺🇾 🇺🇿 🇻🇺 🇻🇦 🇻🇪 🇻🇳 🇼🇫 🇪🇭 🇾🇪 🇿🇲 🇿🇼\"\n\n//array of emojis\nlet emojiArr = emojiFaces.split(' ');\n\n//emoji div\nfunction Emoji(){\n  return(\n    <div id='emojiwrapper'>\n      <div id='emojibuttons'>\n        <button onClick={changeemoji}>Faces</button>\n        <button onClick={changeemoji}>People</button>\n        <button onClick={changeemoji}>Clothes</button>\n        <button onClick={changeemoji}>Animals</button>\n        <button onClick={changeemoji}>Food</button>\n        <button onClick={changeemoji}>Sports</button>\n        <button onClick={changeemoji}>Travel</button>\n        <button onClick={changeemoji}>Objects</button>\n        <button onClick={changeemoji}>Symbols</button>\n        <button onClick={changeemoji}>Flags</button>\n      </div>\n      <div id='emoji' className='emoji'>\n      </div>\n    </div>\n  )\n}\n\nfunction updateemoji(){\n  var divs = document.getElementById('emoji')\n  for(var i=0;i<emojiArr.length;i++){\n    var temp = document.createElement('p');\n    temp.innerHTML = emojiArr[i];\n    divs.appendChild(temp);\n    temp.addEventListener(\"click\", insertEmoji)\n  }\n}\n\nfunction changeemoji(e){\n  var emojibox = document.getElementById('emoji');\n  emojibox.innerHTML = '';\n  switch(e.target.innerHTML){\n    case 'Faces':\n      emojiArr = emojiFaces.split(' ');\n      break;\n    case 'People':\n      emojiArr = emojiPeople.split(' ');\n      break;\n    case 'Clothes':\n      emojiArr = emojiClothes.split(' ');\n      break;\n    case 'Animals':\n      emojiArr = emojiAnimals.split(' ');\n      break;\n    case 'Food':\n      emojiArr = emojiFood.split(' ');\n      break;\n    case 'Sports':\n      emojiArr = emojiSports.split(' ');\n      break;\n    case 'Travel':\n      emojiArr = emojiTravel.split(' ');;\n      break;\n    case 'Objects':\n      emojiArr = emojiObjects.split(' ');\n      break;\n    case 'Symbols':\n      emojiArr = emojiSymbols.split(' ');\n      break;\n    case 'Flags':\n      emojiArr = emojiFlags.split(' ');\n      break;\n    }\n    updateemoji()\n}\n\n\n\n//toggle emoji div\nfunction Emojitoggle(){\n  let div = document.getElementById('emojiwrapper');\n  if(div.style.display == 'inline-block'){\n    div.style.display = 'none'\n  }else{\n    var divs = document.getElementById('emoji')\n    divs.innerHTML = '';\n    div.style.display = 'inline-block'\n    for(var i=0;i<emojiArr.length;i++){\n      var temp = document.createElement('p');\n      temp.innerHTML = emojiArr[i];\n      divs.appendChild(temp);\n      temp.addEventListener(\"click\", insertEmoji)\n    }\n  }\n}\n\n//insert emoji function\nfunction insertEmoji(e){\n  let emoji = e.target.innerHTML\n  var messagebox = document.getElementById('chatbox');\n  messagebox.value += emoji;\n}\n\n//theme selector\n\nfunction Lighttheme(){\n  curtheme = 1;\n  //sidebar css\n  var sidebar = document.getElementById('sidebar');\n  //sidebar colors\n  sidebar.style.backgroundColor= '#3F0E40';\n  sidebar.style.color='white';\n  //messagebox\n  var messagebox = document.getElementById('mc');\n  messagebox.style.backgroundColor = 'white';\n  messagebox.style.color = 'black';\n  //topbar\n  var topbar = document.getElementById('topbar');\n  topbar.style.backgroundColor='rgba(100,100,100,0.2)';\n  topbar.style.color = 'black';\n\n    //change colour of chatbox\n    let chatbox = document.getElementById('chatbox')\n    chatbox.style.backgroundColor = \"white\"\n\n  document.getElementsByTagName('body')[0].style.backgroundColor = 'white';\n\n\n    //resets button backgrounds\n    let channelButtons = document.getElementsByClassName(\"chatButtons\")\n    for(let i=0;i<channelButtons.length;i++){\n        channelButtons[i].style.backgroundColor = \"#3F0E40\";\n    }\n}\n\n// function rainbowtheme(){\n//   curtheme = 4;\n//   //sidebar css\n//   var sidebar = document.getElementById('sidebar');\n//   //sidebar colors\n//   sidebar.style.animationName = 'fade';\n//   sidebar.style.animationDuration = '2s';\n//   sidebar.style.animationIterationCount = 'infinite';\n//   sidebar.style.backgroundColor= '#3F0E40';\n//   sidebar.style.color='white';\n//   //messagebox\n//   var messagebox = document.getElementById('mc');\n//   messagebox.style.backgroundColor = 'white';\n//   messagebox.style.color = 'black';\n//   //topbar\n//   var topbar = document.getElementById('topbar');\n//   topbar.style.color = 'black';\n//   topbar.style.animationName = 'fade';\n//   topbar.style.animationDuration = '2s';\n//   topbar.style.animationIterationCount = 'infinite';\n//   //channel s\n\n\n// }\n\n//dark theme\nfunction darktheme(){\n  curtheme = 2;\n  let sidebarColour = \"#19171D\"\n  let backgroundColour = \"rgb(34, 32, 37)\"\n  //sidebar css\n  var sidebar = document.getElementById('sidebar');\n  //sidebar colors\n  sidebar.style.backgroundColor= sidebarColour;\n  sidebar.style.color='rgb(163,163,166)';\n  //messagebox\n  var messagebox = document.getElementById('mc');\n  messagebox.style.backgroundColor = backgroundColour;\n  messagebox.style.color = 'white';\n  //topbar\n  var topbar = document.getElementById('topbar');\n  topbar.style.backgroundColor=sidebarColour;\n  topbar.style.color = 'gray';\n\n  //change colour of chatbox\n  let chatbox = document.getElementById('chatbox')\n  chatbox.style.backgroundColor = \"#9a9c9e\"\n\n  //changes body colour\n  document.getElementsByTagName(\"body\")[0].style.backgroundColor = backgroundColour\n  \n\n  //resets button backgrounds\n  let channelButtons = document.getElementsByClassName(\"chatButtons\")\n  for(let i=0;i<channelButtons.length;i++){\n      channelButtons[i].style.backgroundColor = sidebarColour;\n  }\n\n}\n\n//top bar\n\nfunction Topbar(){\n  return(\n    <div id ='topbar' className='topbar'>\n      <h2 id='topbarchan'>{curchannel}</h2>\n    </div>\n  )\n}\n\n//chatbox\nfunction ChatBox(ChatBox){\n  return(\n    <div className ='ChatBox'>\n      <input id=\"chatbox\" placeholder={\"Select a channel to message\"}onKeyDown={enterToChat}></input>\n      <button id='toggleemojis' onClick={Emojitoggle}>Emojis</button>\n    </div>\n  )\n}\n\n//each message element\nfunction Messages(){\n  return(\n    <div id=\"mc\" className='mc'>\n      <p id='messages'></p>\n    </div>\n  )\n}\n//channel button element\nfunction Channel(Channel){\n  return(\n    <div className=\"channelNameClass\">\n      <button className=\"chatButtons\" data-id={Channel.Id} onClick={chatChange} onMouseOver={channelHover} onMouseOut={channelHoverOut}>{Channel.Name}</button>\n    </div>\n  )\n}\n\nfunction resetJSON(){\n  let template = {\n    general:{topic:['CHANGEME'],messages:[],messageUser:[]},\n    resources:{topic:['CHANGEME'],messages:[],messageUser:[]},\n    code:{topic:['CHANGEME'],messages:[],messageUser:[]},\n    challenges:{topic:['CHANGEME'],messages:[],messageUser:[]},\n    dev:{topic:['CHANGEME'],messages:[]},\n    random:{topic:['CHANGEME'],messages:[]},\n    users:{users:['Jordan', 'Enzo']},\n  }\n  setData(template)\n}\n\nlet activeButton = '0';\n//when you change channel it loads the right chat\nfunction chatChange(x){\n  loadChats();\n  curchannel = x.target.innerHTML;\n  activeButton = x.target.dataset.id; \n  let buttons = document.getElementsByClassName(\"chatButtons\");\n  for(let i=0;i<buttons.length;i++){\n    switch(curtheme){\n      case 1:\n        buttons[i].style.backgroundColor = \"#3F0E40\";\n        buttons[i].style.color = \"rgb(207,195,207)\";\n        break;\n      case 2:\n        buttons[i].style.backgroundColor = \"#19171D\";\n        buttons[i].style.color = \"rgb(163,163,166)\";\n        break;\n    }\n  }\n  let button = x.target;\n  button.style.backgroundColor = \"#1164A3\";\n  button.style.color = \"white\";\n  var s = document.getElementById('chatbox');\n  s.placeholder = 'Message ' +curchannel\n  var a = document.getElementById('topbarchan');\n  a.innerHTML = curchannel;\n}\n//style for hovering over a channel name\nfunction channelHover(e){\n  if( !(e.target.dataset.id == activeButton )  && curtheme ==1){\n    e.target.style.backgroundColor = \"rgb(44, 7, 44)\";\n    e.target.style.border = \"none\";\n  }\n}\nfunction channelHoverOut(e){\n  if( !(e.target.dataset.id == activeButton) && curtheme == 1 ){\n    e.target.style.backgroundColor = \"#3F0E40\";\n  }\n}\n//styling for hovering over topbar\nfunction topHover(){\n  let element1 = document.getElementById(\"sideName\");\n  let element2 = document.getElementById(\"topspan\");\n  element1.style.color = \"white\";\n  element2.style.color = \"white\";\n}\nfunction topHoverOut(){\n  let element1 = document.getElementById(\"sideName\");\n  let element2 = document.getElementById(\"topspan\");\n  element1.style.color = \"rgb(202, 200, 200)\";\n  element2.style.color = \"rgb(202, 200, 200)\";\n\n}\n\n//when you press enter sends message\nfunction enterToChat(e){\n  if(e.keyCode == 13){\n    send()\n  }\n}\n\n\n//sends message to json\nfunction send(e){\n  var input = document.getElementById('chatbox');\n  var messagebox = document.getElementById('messages');\n  switch(curchannel){\n    case '# general':\n      MessageObject.general.messages[MessageObject.general.messages.length] =  '<span id=\"name\">'+username +' </span> <span id=\"date\">' +new Date().getHours() +':'+new Date().getMinutes() +'</span> <span id=\"messagevalue\">' +input.value +' ';\n      messagebox.innerHTML += MessageObject.general.messages[MessageObject.general.messages.length-1] + '<br>';\n      break;\n    case '# resources':\n      MessageObject.resources.messages[MessageObject.resources.messages.length] = '<span id=\"name\">'+username +' </span> <span id=\"date\">' +new Date().getHours() +':'+new Date().getMinutes() +'</span> <span id=\"messagevalue\">' +input.value +' ';\n      messagebox.innerHTML += MessageObject.resources.messages[MessageObject.resources.messages.length-1] + '<br>';\n      break;\n    case '# code':\n      MessageObject.code.messages[MessageObject.code.messages.length] = '<span id=\"name\">'+username +' </span> <span id=\"date\">' +new Date().getHours() +':'+new Date().getMinutes() +'</span> <span id=\"messagevalue\">' +input.value +' ';\n      messagebox.innerHTML += MessageObject.code.messages[MessageObject.code.messages.length-1] + '<br>';\n      break;\n    case '# challenges':\n      MessageObject.challenges.messages[MessageObject.challenges.messages.length] = '<span id=\"name\">'+username +' </span> <span id=\"date\">' +new Date().getHours() +':'+new Date().getMinutes() +'</span> <span id=\"messagevalue\">' +input.value +' ';\n      messagebox.innerHTML += MessageObject.challenges.messages[MessageObject.challenges.messages.length-1] + '<br>';\n      break;\n    case '# dev':\n        MessageObject.dev.messages[MessageObject.dev.messages.length] = '<span id=\"name\">'+username +' </span> <span id=\"date\">' +new Date().getHours() +':'+new Date().getMinutes() +'</span> <span id=\"messagevalue\">' +input.value +' ';\n        messagebox.innerHTML += MessageObject.dev.messages[MessageObject.dev.messages.length-1] + '<br>';\n        break; \n    case '# random':\n        MessageObject.random.messages[MessageObject.random.messages.length] = '<span id=\"name\">'+username +' </span> <span id=\"date\">' +new Date().getHours() +':'+new Date().getMinutes() +'</span> <span id=\"messagevalue\">' +input.value +' ';\n        messagebox.innerHTML += MessageObject.random.messages[MessageObject.random.messages.length-1] + '<br>';\n        break; \n  }\n  setData(MessageObject)\n  messagebox.scrollTop = messagebox.scrollHeight - messagebox.clientHeight;\n  input.value = '';\n}\n\n//gets data from server\nvar MessageObject = 0;\nasync function getData(){\n  await getDataPromise()\n  return MessageObject\n}\n\nfunction getDataPromise(){\n  new Promise((resolve,reject) =>{\n    $.get( \"https://api.myjson.com/bins/17y9r6\", function( data ) {\n      console.log( \"Data Loaded: \");\n      MessageObject = data;\n      resolve();\n    });\n  })\n}\n\n//pushes to json\nfunction setData(data){\n  $.ajax({\n    url:\"https://api.myjson.com/bins/17y9r6\",\n    type:\"PUT\",\n    data: JSON.stringify(data),\n    contentType:\"application/json; charset=utf-8\",\n    dataType:\"json\",\n    success: function(data, textStatus, jqXHR){\n      console.log(\"updated\")\n    }\n  });\n}\n\n//loads all previous chats from json\nfunction loadChats(){\n  getData()\n  var messagebox = document.getElementById('messages');\n  messagebox.innerHTML = '';\n  switch(curchannel){\n    case '# general':\n      for(var i=0;i<MessageObject.general.messages.length;i++){\n        messagebox.innerHTML += MessageObject.general.messages[i] + \"<br>\";\n      }\n      break;\n    case '# resources':\n      for(var i=0;i<MessageObject.resources.messages.length;i++){\n        messagebox.innerHTML += MessageObject.resources.messages[i] + \"<br>\";\n      }\n      break;\n    case '# code':\n      for(var i=0;i<MessageObject.code.messages.length;i++){\n        messagebox.innerHTML += MessageObject.code.messages[i] + \"<br>\";\n      }\n      break;\n    case '# challenges':\n      for(var i=0;i<MessageObject.challenges.messages.length;i++){\n        messagebox.innerHTML += MessageObject.challenges.messages[i] + \"<br>\";\n      }\n      break;\n    case '# dev':\n        for(var i=0;i<MessageObject.dev.messages.length;i++){\n          messagebox.innerHTML += MessageObject.dev.messages[i] + \"<br>\";\n        }\n        break;\n    case '# random':\n        for(var i=0;i<MessageObject.random.messages.length;i++){\n          messagebox.innerHTML += MessageObject.random.messages[i] + \"<br>\";\n        }\n        break;\n  }\n  messagebox.scrollTop = messagebox.scrollHeight - messagebox.clientHeight;\n\n}\n\n//update screen with messages\nwindow.setInterval(loadChats, 1000);\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}